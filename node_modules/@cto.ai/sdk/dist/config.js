"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = require("fs-extra");
const path = __importStar(require("path"));
class Config {
    constructor(stateDir) {
        this.stateDir = stateDir;
        this.getAll = async () => {
            return fs_extra_1.readJson(path.join(this.stateDir, 'config.json')).catch(() => ({}));
        };
        this.get = async (key) => {
            const origConfigObj = await this.getAll();
            return origConfigObj[key];
        };
        this.set = async (key, value) => {
            const origConfigObj = await this.getAll();
            const mergedConfigObj = Object.assign({}, origConfigObj, { [key]: value });
            await fs_extra_1.outputJson(path.join(this.stateDir, 'config.json'), mergedConfigObj);
            return mergedConfigObj;
        };
    }
}
exports.Config = Config;
