import inquirer = require('@cto.ai/inquirer');
import { Question } from '@cto.ai/inquirer';
import * as cliProgress from 'cli-progress';
declare function url(text: string, url: string): string;
declare function annotation(text: string, annotation: string): void;
declare function notify(options: object): void;
declare function print(text: string): Promise<void>;
declare function prompt<A>(questions: Question[] | Question): Promise<A>;
declare function start(text: string): void;
declare function stop(text: string): void;
declare function wait(duration: number): Promise<void>;
declare function init(options?: cliProgress.Options): cliProgress.Bar;
declare const _default: {
    print: typeof print;
    prompt: typeof prompt;
    colors: import("chalk").Chalk & {
        supportsColor: import("chalk").ColorSupport;
    } & {
        callOutCyan: (text: string) => string;
        actionBlue: (text: string) => string;
        primary: (text: string) => string;
        secondary: (text: string) => string;
        tertiary: (text: string) => string;
        successGreen: (text: string) => string;
        errorRed: (text: string) => string;
        multiPurple: (text: string) => string;
        multiBlue: (text: string) => string;
        multiOrange: (text: string) => string;
    };
    spinner: {
        start: typeof start;
        stop: typeof stop;
    };
    wait: typeof wait;
    url: typeof url;
    annotation: typeof annotation;
    table: typeof import("cli-ux/lib/styled/table").table;
    tree: typeof import("cli-ux/lib/styled/tree").default;
    progress: {
        init: typeof init;
    };
    notify: typeof notify;
    inquirer: inquirer.Inquirer;
};
export default _default;
